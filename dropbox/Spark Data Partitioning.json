{"paragraphs":[{"text":"%md\n# Spark Data Partitioning\n\nWelcome to the notebook with the exercises for the fifth session. You’re halfway on the path to obtain the Wizeline Certification for Big Data Engineering with Spark!\nIf you have any feedback about our courses, email us at academy@wizeline.com or use the Academy Slack channel.\n \nIn this notebook you will be doing four exercises aimed at:\n - Looking at the data distribution of the partitions stored in your cluster.\n - Use different partitioning approaches to understand which is the best approach.\n - Understand the impact of the partitioning on the I/O functions.\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Spark Data Partitioning</h1>\n<p>Welcome to the notebook with the exercises for the fifth session. You’re halfway on the path to obtain the Wizeline Certification for Big Data Engineering with Spark!<br/>If you have any feedback about our courses, email us at <a href=\"mailto:a&#x63;&#97;&#x64;&#x65;&#109;&#121;@&#x77;&#x69;z&#101;&#x6c;&#x69;&#110;&#101;&#46;&#99;&#111;&#x6d;\">a&#x63;&#97;&#x64;&#x65;&#109;&#121;@&#x77;&#x69;z&#101;&#x6c;&#x69;&#110;&#101;&#46;&#99;&#111;&#x6d;</a> or use the Academy Slack channel.</p>\n<p>In this notebook you will be doing four exercises aimed at:<br/> - Looking at the data distribution of the partitions stored in your cluster.<br/> - Use different partitioning approaches to understand which is the best approach.<br/> - Understand the impact of the partitioning on the I/O functions.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660792_1739485531","id":"20180824-154704_999864938","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:533"},{"title":"","text":"%md\n# Exercise 1- Partitions and data distribution\n\nIn this exercise, you will look at the the data contained in different partitions. Pay attention to how the data is distributed between the partitions depending on how they are created.\n\nYou are expected to use the DataSet sample `transactions`, which contains monetary transactions for users in the world.\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"title":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 1- Partitions and data distribution</h1>\n<p>In this exercise, you will look at the the data contained in different partitions. Pay attention to how the data is distributed between the partitions depending on how they are created.</p>\n<p>You are expected to use the DataSet sample <code>transactions</code>, which contains monetary transactions for users in the world.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660793_1739100782","id":"20180824-160322_654860629","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:534"},{"text":"import org.apache.spark.sql.{SparkSession,Dataset,Row,SaveMode}","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.{SparkSession, Dataset, Row, SaveMode}\n"}]},"apps":[],"jobName":"paragraph_1535652660793_1739100782","id":"20180828-013421_1049632795","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:535"},{"text":"case class Transactions(name:String, amount:Long, country:String)\n\nval transactions = List(\n    Transactions(\"Bob\", 25, \"MX\"),\n    Transactions(\"James\", 15, \"United Kingdom\"),\n    Transactions(\"Marek\", 51, \"Poland\"),\n    Transactions(\"Johannes\", 200,\"Germany\"),\n    Transactions(\"Paul\", 75, \"Poland\"),\n    Transactions(\"Bob\", 35, \"Mexico\"),\n    Transactions(\"James\", 21, \"Germany\")\n)","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class Transactions\ntransactions: List[Transactions] = List(Transactions(Bob,25,MX), Transactions(James,15,United Kingdom), Transactions(Marek,51,Poland), Transactions(Johannes,200,Germany), Transactions(Paul,75,Poland), Transactions(Bob,35,Mexico), Transactions(James,21,Germany))\n"}]},"apps":[],"jobName":"paragraph_1535652660794_1740255029","id":"20180827-172331_1658203493","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:537"},{"text":"%md\n\nThe following code snippet creates a data frame and outputs you the number of partitions, partitioner and partition structure.\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The following code snippet creates a data frame and outputs you the number of partitions, partitioner and partition structure.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660794_1740255029","id":"20180824-161222_1775895785","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:538"},{"text":"import org.apache.spark.sql.Row\n\n\nval df = spark.createDataFrame(transactions)\n\ndf.rdd.getNumPartitions\ndf.rdd.partitioner\ndf.rdd.glom().collect()\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.Row\ndf: org.apache.spark.sql.DataFrame = [name: string, amount: bigint ... 1 more field]\nres4: Int = 2\nres5: Option[org.apache.spark.Partitioner] = None\nres6: Array[Array[org.apache.spark.sql.Row]] = Array(Array([Bob,25,MX], [James,15,United Kingdom], [Marek,51,Poland]), Array([Johannes,200,Germany], [Paul,75,Poland], [Bob,35,Mexico], [James,21,Germany]))\n"}]},"apps":[],"jobName":"paragraph_1535652660794_1740255029","id":"20180827-182233_1620123781","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:540"},{"text":"%md\nLook at the output and answer the following questions:\n    - Names on partition 1\n    - Amounts on partition 2\n    - Why is the partitioned `None`?\n\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Look at the output and answer the following questions:<br/> - Names on partition 1<br/> - Amounts on partition 2<br/> - Why is the partitioned <code>None</code>?</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660795_1739870280","id":"20180824-161209_564012877","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:541"},{"text":"%md\n**REPARTITIONING:** The following code repartitions the original DataFrame and outputs the same information. ","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong>REPARTITIONING:</strong> The following code repartitions the original DataFrame and outputs the same information.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660795_1739870280","id":"20180824-161118_605198725","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:542"},{"text":"val df2 = df.repartition($\"country\")\n\ndf2.rdd.getNumPartitions\ndf2.rdd.partitioner\ndf2.rdd.glom().collect()","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{"0":{"graph":{"mode":"table","height":125,"optionOpen":false}}},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df2: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [name: string, amount: bigint ... 1 more field]\nres8: Int = 200\nres9: Option[org.apache.spark.Partitioner] = None\nres10: Array[Array[org.apache.spark.sql.Row]] = Array(Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array([Bob,25,MX]), Array(), Array(), Array(), Array(), Array([Johannes,200,Germany], [James,21,Germany]), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(..."}]},"apps":[],"jobName":"paragraph_1535652660796_1737946536","id":"20180827-191139_22040351","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:544"},{"text":"%md\nLook at the output and answer the following questions:\n - Amounts on partition 1\n - Names on partition 2\n - What is the main difference?\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Look at the output and answer the following questions:<br/> - Amounts on partition 1<br/> - Names on partition 2<br/> - What is the main difference?</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660796_1737946536","id":"20180824-161944_2121074393","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:545"},{"text":"%md\nRemember more partitions != uniform partition distribution. So more partitions is not necessarily the answer, in fact if you end up having too many partitions you may bump into a problem with very small files.","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Remember more partitions != uniform partition distribution. So more partitions is not necessarily the answer, in fact if you end up having too many partitions you may bump into a problem with very small files.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660796_1737946536","id":"20180824-163234_318434487","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:546"},{"text":"%md\n# Exercise 2 - Partitioning approaches\n\nUsing the same dataset, create new datasets, try partitioning using each one of the columns. This means you will end with 4 distinct datasets.\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 2 - Partitioning approaches</h1>\n<p>Using the same dataset, create new datasets, try partitioning using each one of the columns. This means you will end with 4 distinct datasets.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660796_1737946536","id":"20180824-163253_580541449","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:547"},{"text":"val df2 = df.repartition($\"name\")\n\ndf2.rdd.getNumPartitions\ndf2.rdd.partitioner\ndf2.rdd.glom().collect()\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df2: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [name: string, amount: bigint ... 1 more field]\nres12: Int = 200\nres13: Option[org.apache.spark.Partitioner] = None\nres14: Array[Array[org.apache.spark.sql.Row]] = Array(Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array([James,15,United Kingdom], [James,21,Germany]), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array..."}]},"apps":[],"jobName":"paragraph_1535652660797_1737561787","id":"20180827-192209_233833264","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:549"},{"text":"val df3 = df.repartition($\"amount\")\n\ndf3.rdd.getNumPartitions\ndf3.rdd.partitioner\ndf3.rdd.glom().collect()","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df3: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [name: string, amount: bigint ... 1 more field]\nres16: Int = 200\nres17: Option[org.apache.spark.Partitioner] = None\nres18: Array[Array[org.apache.spark.sql.Row]] = Array(Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array([Bob,25,MX]), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array([Marek,51,Poland]), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Arra..."}]},"apps":[],"jobName":"paragraph_1535652660797_1737561787","id":"20180828-005748_1703782057","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:550"},{"text":"val df4 = df.repartition(15)\n\ndf4.rdd.getNumPartitions\ndf4.rdd.partitioner\ndf4.rdd.glom().collect()","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df4: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [name: string, amount: bigint ... 1 more field]\nres20: Int = 15\nres21: Option[org.apache.spark.Partitioner] = None\nres22: Array[Array[org.apache.spark.sql.Row]] = Array(Array(), Array([Bob,25,MX], [Johannes,200,Germany]), Array([James,15,United Kingdom], [Paul,75,Poland]), Array([Marek,51,Poland], [Bob,35,Mexico]), Array([James,21,Germany]), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array(), Array())\n"}]},"apps":[],"jobName":"paragraph_1535652660797_1737561787","id":"20180828-005931_752630651","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:551"},{"text":"val df5 = df.repartition(7).repartition($\"amount\")","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535652660798_1738716034","id":"20180828-010218_654380308","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:552"},{"text":"%md\nAfter printing the number of partitions, partitioner and partitions structure, answer the following question: \n - In this case, what is the best approach?\n - How can you determine that?\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>After printing the number of partitions, partitioner and partitions structure, answer the following question:<br/> - In this case, what is the best approach?<br/> - How can you determine that?</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660798_1738716034","id":"20180824-163507_1092132855","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:553"},{"text":"%md\nAs you can see, the repartitioning has a direct effect on the distribution of the information, using the correct column is essential. For knowing the most appropriate column, you need to be familiar with the data, there is no workaround. ","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>As you can see, the repartitioning has a direct effect on the distribution of the information, using the correct column is essential. For knowing the most appropriate column, you need to be familiar with the data, there is no workaround.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660798_1738716034","id":"20180824-163550_767573207","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:554"},{"text":"%md\n# Exercise 3 - I/O with single and multiple files\n\nNow, look at reading and writing. You already know this is a costly operation. Regardless, there are strategies for troubleshooting or improving the reading and writing performance. This exercise requires you to Read and Write a DataSet in a single file and multiple files to compare performance.\n\nQuestion: How do you determine the best approach?\nNote: unless you control what is being written, you can only make recommendations on the file sizes for you to read later. If you are given one big block then your fate is sealed.\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 3 - I/O with single and multiple files</h1>\n<p>Now, look at reading and writing. You already know this is a costly operation. Regardless, there are strategies for troubleshooting or improving the reading and writing performance. This exercise requires you to Read and Write a DataSet in a single file and multiple files to compare performance.</p>\n<p>Question: How do you determine the best approach?<br/>Note: unless you control what is being written, you can only make recommendations on the file sizes for you to read later. If you are given one big block then your fate is sealed.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660798_1738716034","id":"20180824-163615_1064210426","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:555"},{"text":"%md First let's read the data. The dataset is quite big, so let's take a small sample instead:","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>First let&rsquo;s read the data. The dataset is quite big, so let&rsquo;s take a small sample instead:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660798_1738716034","id":"20180827-165943_350742125","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:556"},{"text":"val df = spark.read.json(\"gs://de-training-input/alimazon/50000/client-orders/*.gz\")\n    .sample(false, 0.2) // take 20% of the data without replacement\ndf.count()","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [client_id: string, id: string ... 4 more fields]\nres23: Long = 13383\n"}]},"apps":[],"jobName":"paragraph_1535652660799_1738331285","id":"20180827-170048_1570856632","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:558"},{"text":"%md **`NOTE:`** Do not forget to set you username here","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><code>NOTE:</code></strong> Do not forget to set you username here</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660799_1738331285","id":"20180827-171324_1624649057","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:559"},{"text":"val username = \"fherdelpino\"","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"username: String = fherdelpino\n"}]},"apps":[],"jobName":"paragraph_1535652660800_1724095575","id":"20180827-171640_353868380","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:561"},{"text":"%md Let's write our data using different partitions.\nConfirm in GCP that the dataset was written in the number of specified partitions.","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Let&rsquo;s write our data using different partitions.<br/>Confirm in GCP that the dataset was written in the number of specified partitions.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660801_1723710826","id":"20180827-170049_2139323805","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:562"},{"text":"df.repartition(1).write.mode(SaveMode.Overwrite).json(s\"gs://de-training-output-$username/client-orders-1part/\")\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1535652660801_1723710826","id":"20180827-173626_223417974","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:564"},{"text":"df.repartition(6).write.mode(SaveMode.Overwrite).json(s\"gs://de-training-output-$username/client-orders-6part/\")","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1535652660802_1724865073","id":"20180828-013314_1142765669","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:565"},{"text":"%md Let's experiment a bit more reading and writing using different numbers of partitions:","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Let&rsquo;s experiment a bit more reading and writing using different numbers of partitions:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660802_1724865073","id":"20180827-192903_1248488032","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:566"},{"text":"%md Here is the example for reading from one file and writing to one file","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Here is the example for reading from one file and writing to one file</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660803_1724480324","id":"20180827-171740_251328243","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:567"},{"text":"val df1 = spark.read.json(s\"gs://de-training-output-$username/client-orders-1part/\")\ndf1.repartition(1).write.csv(s\"gs://de-training-output-$username/client-orders-1in-1out/\")","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df1: org.apache.spark.sql.DataFrame = [client_id: string, id: string ... 4 more fields]\n"}]},"apps":[],"jobName":"paragraph_1535652660803_1724480324","id":"20180827-171820_27449283","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:569"},{"text":"%md Here is the example for reading from multiple files and writing to multiple files","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Here is the example for reading from multiple files and writing to multiple files</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660804_1722556580","id":"20180827-171903_233529514","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:570"},{"text":"val df6 = spark.read.json(s\"gs://de-training-output-$username/client-orders-6part/\")\ndf6.repartition(6).write.csv(s\"gs://de-training-output-$username/client-orders-6in-6out/\")","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df6: org.apache.spark.sql.DataFrame = [client_id: string, id: string ... 4 more fields]\n"}]},"apps":[],"jobName":"paragraph_1535652660804_1722556580","id":"20180827-172046_737696731","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:572"},{"text":"df.repartition(4).write.mode(SaveMode.Overwrite).json(s\"gs://de-training-output-$username/client-orders-4part/\")\nval df4 = spark.read.json(s\"gs://de-training-output-$username/client-orders-4part/\")\ndf4.repartition(4).write.mode(SaveMode.Overwrite).csv(s\"gs://de-training-output-$username/client-orders-4in-4out/\")\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df4: org.apache.spark.sql.DataFrame = [client_id: string, id: string ... 4 more fields]\n"}]},"apps":[],"jobName":"paragraph_1535652660805_1722171831","id":"20180828-013901_493285620","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:573"},{"text":"%md Explore using different number of partitions, reading from 1 file and writing to 4","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Explore using different number of partitions, reading from 1 file and writing to 4</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660806_1723326078","id":"20180827-172131_750013194","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:574"},{"text":"%md\n# Exercise 4 - Flights dataset partitions size\n\nThe next code help you to display the size of each partition, we are going to generate a sample dataset\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 4 - Flights dataset partitions size</h1>\n<p>The next code help you to display the size of each partition, we are going to generate a sample dataset</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660806_1723326078","id":"20180824-163816_107227786","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:575"},{"text":"val sampleDataSet = ((1 to 100000).map((_,0))++(1 to 100).flatMap(i => (1 to 100).map((_,i)))).toDS.cache\nprintln(sampleDataSet.rdd.getNumPartitions)\nval partitions = sampleDataSet.mapPartitions(iter => Seq(iter.size).iterator)\npartitions.show()","dateUpdated":"2018-08-30T18:11:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"sampleDataSet: org.apache.spark.sql.Dataset[(Int, Int)] = [_1: int, _2: int]\n2\npartitions: org.apache.spark.sql.Dataset[Int] = [value: int]\n+-----+\n|value|\n+-----+\n|55000|\n|55000|\n+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1535652660807_1722941329","id":"20180824-163856_1912329826","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:577"},{"text":"%md\nNow, using your acquired knowledge of former sessions, load the flights DataSet and display the size of the partitions\n","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Now, using your acquired knowledge of former sessions, load the flights DataSet and display the size of the partitions</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535652660807_1722941329","id":"20180824-163919_2039405814","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:578"},{"text":"","dateUpdated":"2018-08-30T18:11:00+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535652660807_1722941329","id":"20180824-163954_1813225578","dateCreated":"2018-08-30T18:11:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:579"}],"name":"Spark Data Partitioning","id":"2DQEX31B9","angularObjects":{"2DQWJKJZV:shared_process":[],"2DPACY4Y6:shared_process":[],"2DPQDJRRT:shared_process":[],"2DRZE8584:shared_process":[],"2DQCCPG3B:shared_process":[],"2DRJKCRCT:shared_process":[],"2DNCDNFU8:shared_process":[],"2DPD9QH9T:shared_process":[],"2DRRYG7WR:shared_process":[],"2DR2JD8MZ:shared_process":[],"2DR3CT13T:shared_process":[],"2DQ4JJQYA:shared_process":[],"2DNK66HUB:shared_process":[],"2DR53UGYZ:shared_process":[],"2DRVNVBKY:shared_process":[],"2DPTABC22:shared_process":[],"2DR85971D:shared_process":[],"2DQDVHEAT:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}