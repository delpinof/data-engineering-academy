{"paragraphs":[{"text":"val bucket = \"de-training-output-fherdelpino\"\r\nval destFolder = \"assignment-6-tst\"\r\n\r\nval orders = spark.read.json(\"gs://de-training-input/alimazon/200000/stock-orders/\")\r\n\r\nval products = orders.groupBy(year($\"timestamp\").alias(\"year\"), weekofyear($\"timestamp\").alias(\"week\"), substring($\"id\",0,2).alias(\"category\"), $\"product_id\").agg(sum($\"total\").alias(\"total\"), sum($\"quantity\").alias(\"quantity\"))\r\n\r\nval windowDesc = Window.partitionBy($\"year\", $\"week\", $\"category\").orderBy(desc(\"total\"))\r\n\r\n//Don't repartition\r\n//val orderedProductsDesc = products.withColumn(\"order\", row_number over windowDesc).repartition(500)\r\nval orderedProductsDesc = products.withColumn(\"order\", row_number over windowDesc)\r\n\r\n//avoid RDD\r\n//val topMostProducts = orderedProductsDesc.rdd.filter(row => row.getInt(6) <= 5)\r\n//val schema = new StructType().add(StructField(\"year\", IntegerType, true)).add(StructField(\"week\", IntegerType, true)).add(StructField(\"category\", StringType, true)).add(StructField(\"product_id\", StringType, true)).add(StructField(\"total\", DoubleType, true)).add(StructField(\"quantity\", LongType, true)).add(StructField(\"order\", IntegerType, true))\r\n//val topMostProductsDF = spark.createDataFrame(topMostProducts, schema).cache\r\nval topMostProductsDF = orderedProductsDesc.filter($\"order\" <= 5).cache\r\n\r\n//TODO: a repartition might be needed\r\n\r\nval topMostTotals = topMostProductsDF.groupBy($\"year\", $\"week\".alias(\"week_num\"), $\"category\".alias(\"prod_cat\")).agg(sum($\"quantity\").alias(\"total_qty_top5\"), sum($\"total\").alias(\"total_spent_top5\"))\r\n\r\n//coalesce is needed!!!\r\ntopMostTotals.coalesce(1).write.mode(SaveMode.Overwrite).option(\"codec\", \"org.apache.hadoop.io.compress.GzipCodec\").csv(s\"gs://$bucket/$destFolder/top-5-most\")","user":"anonymous","dateUpdated":"2018-09-03T04:56:31+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"bucket: String = de-training-output-fherdelpino\ndestFolder: String = assignment-6-tst\norders: org.apache.spark.sql.DataFrame = [id: string, product_id: string ... 3 more fields]\nproducts: org.apache.spark.sql.DataFrame = [year: int, week: int ... 4 more fields]\nwindowDesc: org.apache.spark.sql.expressions.WindowSpec = org.apache.spark.sql.expressions.WindowSpec@a991510\norderedProductsDesc: org.apache.spark.sql.DataFrame = [year: int, week: int ... 5 more fields]\ntopMostProductsDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [year: int, week: int ... 5 more fields]\ntopMostTotals: org.apache.spark.sql.DataFrame = [year: int, week_num: int ... 3 more fields]\n"}]},"apps":[],"jobName":"paragraph_1535946245687_-1054813531","id":"20180903-034405_1609625259","dateCreated":"2018-09-03T03:44:05+0000","dateStarted":"2018-09-03T04:56:31+0000","dateFinished":"2018-09-03T04:56:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5898"},{"text":"val windowAsc = Window.partitionBy($\"year\", $\"week\", $\"category\").orderBy(asc(\"total\"))\r\n\r\n//Don't repartition\r\n//val orderedProductsAsc = products.withColumn(\"order\", row_number over windowAsc).repartition(500)\r\nval orderedProductsAsc = products.withColumn(\"order\", row_number over windowAsc)\r\n\r\n//avoid RDD\r\n//val topLeastProducts = orderedProductsAsc.rdd.filter(row => row.getInt(6) <= 5)\r\n//val topLeastProductsDF = spark.createDataFrame(topLeastProducts, schema).cache\r\nval topLeastProductsDF = orderedProductsAsc.filter($\"order\" <= 5).cache\r\n\r\n//TODO: a repartition might be needed\r\n\r\nval topLeastTotals = topLeastProductsDF.groupBy($\"year\", $\"week\".alias(\"week_num\"), $\"category\".alias(\"prod_cat\")).agg(sum($\"quantity\").alias(\"total_qty_top5\"), sum($\"total\").alias(\"total_spent_top5\"))\r\n\r\ntopLeastTotals.coalesce(1).write.mode(SaveMode.Overwrite).option(\"codec\", \"org.apache.hadoop.io.compress.GzipCodec\").csv(s\"gs://$bucket/$destFolder/top-5-least\")","user":"anonymous","dateUpdated":"2018-09-03T04:56:31+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"windowAsc: org.apache.spark.sql.expressions.WindowSpec = org.apache.spark.sql.expressions.WindowSpec@1ffa3a95\norderedProductsAsc: org.apache.spark.sql.DataFrame = [year: int, week: int ... 5 more fields]\ntopLeastProductsDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [year: int, week: int ... 5 more fields]\ntopLeastTotals: org.apache.spark.sql.DataFrame = [year: int, week_num: int ... 3 more fields]\n"}]},"apps":[],"jobName":"paragraph_1535946264546_1172680097","id":"20180903-034424_1327868635","dateCreated":"2018-09-03T03:44:24+0000","dateStarted":"2018-09-03T04:56:32+0000","dateFinished":"2018-09-03T04:56:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5899"},{"text":"val topMostProductsConcat = topMostProductsDF.groupBy($\"category\").pivot(\"order\").agg(first(\"product_id\")).withColumn(\"top5_most\", concat_ws(\";\", $\"1\", $\"2\", $\"3\", $\"4\", $\"5\")).drop(\"1\",\"2\",\"3\",\"4\",\"5\").repartition(9)\r\n\r\nval topLeastProductsConcat = topLeastProductsDF.groupBy($\"category\").pivot(\"order\").agg(first(\"product_id\")).withColumn(\"top5_least\", concat_ws(\";\", $\"1\", $\"2\", $\"3\", $\"4\", $\"5\")).drop(\"1\",\"2\",\"3\",\"4\",\"5\").repartition(9)\r\n\r\nval categoryTotals = orders.groupBy(substring($\"id\",0,2).alias(\"category\")).agg(sum($\"total\").alias(\"total_spent\"), sum($\"quantity\").alias(\"total_qty_cat\"))\r\n\r\nval allTotals = categoryTotals.join(topMostProductsConcat, \"category\").join(topLeastProductsConcat, \"category\")\r\n\r\nval allTotalsOrdered = allTotals.select($\"category\",$\"top5_most\", $\"top5_least\", $\"total_qty_cat\", $\"total_spent\")\r\n\r\nallTotalsOrdered.coalesce(1).write.mode(SaveMode.Overwrite).option(\"codec\", \"org.apache.hadoop.io.compress.GzipCodec\").csv(s\"gs://$bucket/$destFolder/top-5-all\")","user":"anonymous","dateUpdated":"2018-09-03T04:56:31+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535947513941_33661365","id":"20180903-040513_344099438","dateCreated":"2018-09-03T04:05:13+0000","dateStarted":"2018-09-03T04:56:47+0000","dateFinished":"2018-09-03T04:57:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5900","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"topMostProductsConcat: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [category: string, top5_most: string]\ntopLeastProductsConcat: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [category: string, top5_least: string]\ncategoryTotals: org.apache.spark.sql.DataFrame = [category: string, total_spent: double ... 1 more field]\nallTotals: org.apache.spark.sql.DataFrame = [category: string, total_spent: double ... 3 more fields]\nallTotalsOrdered: org.apache.spark.sql.DataFrame = [category: string, top5_most: string ... 3 more fields]\n"}]}},{"user":"anonymous","dateUpdated":"2018-09-03T04:54:06+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535948131252_229911187","id":"20180903-041531_955336033","dateCreated":"2018-09-03T04:15:31+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:5901"}],"name":"/C6/C6 improvements","id":"2DS6W7BB5","angularObjects":{"2DNM8HH9R:shared_process":[],"2DPAJM3FV:shared_process":[],"2DPP7R37Q:shared_process":[],"2DSBHFGZF:shared_process":[],"2DQHJ7BW7:shared_process":[],"2DS176EUN:shared_process":[],"2DSA6KMN5:shared_process":[],"2DS6HX26E:shared_process":[],"2DPJ8KAJB:shared_process":[],"2DPGJ4UWF:shared_process":[],"2DP45KX44:shared_process":[],"2DNK6JB7W:shared_process":[],"2DQWNF842:shared_process":[],"2DR95B4ZV:shared_process":[],"2DS7H8T6P:shared_process":[],"2DPAXF413:shared_process":[],"2DRD55ZKX:shared_process":[],"2DR5XJBDH:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}