{"paragraphs":[{"text":"import org.apache.spark.sql.types.{StructType, StringType, TimestampType, IntegerType, DoubleType}\r\nimport org.apache.spark.sql.{Dataset,Row,SaveMode}\r\nimport java.util.Calendar\r\nimport java.sql.Timestamp\r\n\r\nval schema = (new StructType).add(\"id\", StringType).add(\"client_id\",StringType).add(\"timestamp\", TimestampType).add(\"product_id\",StringType).add(\"quantity\",IntegerType).add(\"total\",DoubleType)\r\n\r\nval orders = spark.read.schema(schema).json(\"gs://de-training-input/alimazon/200000/client-orders/*.jsonl.gz\")\r\n\r\norders.createOrReplaceTempView(\"orders\")\r\n\r\nspark.udf.register(\"dayofweek\", (input: Timestamp) => {\r\n        val cal = Calendar.getInstance()\r\n        cal.setTime(input)\r\n        cal.get(Calendar.DAY_OF_WEEK)\r\n    }\r\n)\r\n        \r\n//Function to save to a file in CVS format\r\ndef saveToFile(ds:Dataset[Row],filename:String) = {\r\n            ds.write.mode(SaveMode.Overwrite)\r\n        \t   .format(\"com.databricks.spark.csv\")\r\n        \t   .option(\"header\", true)\r\n        \t   .option(\"delimiter\", \",\")\r\n        \t   .save(s\"gs://de-training-output-fherdelpino/assignment-3/zep/$filename\")\r\n}\r\n\r\n\r\n\r\n//end","user":"anonymous","dateUpdated":"2018-08-27T04:33:35+0000","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.types.{StructType, StringType, TimestampType, IntegerType, DoubleType}\nimport org.apache.spark.sql.{Dataset, Row, SaveMode}\nimport java.util.Calendar\nimport java.sql.Timestamp\nschema: org.apache.spark.sql.types.StructType = StructType(StructField(id,StringType,true), StructField(client_id,StringType,true), StructField(timestamp,TimestampType,true), StructField(product_id,StringType,true), StructField(quantity,IntegerType,true), StructField(total,DoubleType,true))\norders: org.apache.spark.sql.DataFrame = [id: string, client_id: string ... 4 more fields]\nres329: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(TimestampType)))\nsaveToFile: (ds: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row], filename: String)Unit\n"}]},"apps":[],"jobName":"paragraph_1535324933048_1910215018","id":"20180823-215051_604883637","dateCreated":"2018-08-26T23:08:53+0000","dateStarted":"2018-08-27T04:33:35+0000","dateFinished":"2018-08-27T04:34:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:348"},{"text":"def runProductReports(i:Int) : Unit = {\n    val productWeek = spark.sql(s\"select product_id, sum(total) gross_sales, count(id) orders_count from orders where dayofweek(timestamp) = $i group by product_id\")\n    productWeek.cache()\n    saveToFile(productWeek.select(\"product_id\",\"gross_sales\").orderBy($\"gross_sales\".desc).limit(10),s\"top10_products_by_gross_sales_$i\")\n    saveToFile(productWeek.select(\"product_id\",\"orders_count\").orderBy($\"orders_count\".desc).limit(10),s\"top10_products_by_orders_$i\")\n    println(s\"Product report $i done\")\n}","user":"anonymous","dateUpdated":"2018-08-27T04:33:35+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"runProductReports: (i: Int)Unit\n"}]},"apps":[],"jobName":"paragraph_1535324933056_1894825062","id":"20180825-205825_2100153240","dateCreated":"2018-08-26T23:08:53+0000","dateStarted":"2018-08-27T04:33:35+0000","dateFinished":"2018-08-27T04:34:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:349"},{"text":"for (i <- 1 to 7) runProductReports(i)","user":"anonymous","dateUpdated":"2018-08-27T04:33:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535332399994_-971353459","id":"20180827-011319_1778657335","dateCreated":"2018-08-27T01:13:19+0000","dateStarted":"2018-08-27T04:34:28+0000","dateFinished":"2018-08-27T04:30:48+0000","status":"RUNNING","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:350"},{"text":"def runCustomerReports(i:Int) : Unit = {\n    val customerMonth = spark.sql(s\"select client_id, sum(total) gross_sales, count(id) orders_count from orders where month(timestamp) = $i group by client_id\")\n    customerMonth.cache()\n    saveToFile(customerMonth.select(\"client_id\",\"gross_sales\").orderBy($\"gross_sales\".desc).limit(10),s\"top10_customers_by_gross_spending_$i\")\n    saveToFile(customerMonth.select(\"client_id\",\"orders_count\").orderBy($\"orders_count\".desc).limit(10),s\"top10_customers_by_orders_$i\")\n    println(s\"Customers report $i done\")\n}\n","user":"anonymous","dateUpdated":"2018-08-27T04:33:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535332447940_368034083","id":"20180827-011407_415536855","dateCreated":"2018-08-27T01:14:07+0000","dateStarted":"2018-08-27T04:34:29+0000","dateFinished":"2018-08-27T04:30:49+0000","status":"PENDING","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:351"},{"text":"for (i <- 1 to 12) runCustomerReports(i)","user":"anonymous","dateUpdated":"2018-08-27T04:33:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Customers report 1 done\nCustomers report 2 done\nCustomers report 3 done\nCustomers report 4 done\nCustomers report 5 done\nCustomers report 6 done\nCustomers report 7 done\nCustomers report 8 done\nCustomers report 9 done\nCustomers report 10 done\nCustomers report 11 done\nCustomers report 12 done\n"}]},"apps":[],"jobName":"paragraph_1535332893689_-1167471418","id":"20180827-012133_1998307722","dateCreated":"2018-08-27T01:21:33+0000","dateStarted":"2018-08-27T04:30:49+0000","dateFinished":"2018-08-27T04:32:50+0000","status":"PENDING","progressUpdateIntervalMs":500,"$$hashKey":"object:352"},{"user":"anonymous","dateUpdated":"2018-08-27T04:33:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535333194063_-1558161762","id":"20180827-012634_875617346","dateCreated":"2018-08-27T01:26:34+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:353"}],"name":"AlimazonC3v2 test","id":"2DQN5SUME","angularObjects":{"2DNJNY25G:shared_process":[],"2DR8KV4YY:shared_process":[],"2DQQ5AU59:shared_process":[],"2DNAQHZEM:shared_process":[],"2DN7UXA35:shared_process":[],"2DRN8QGQ1:shared_process":[],"2DND36QZD:shared_process":[],"2DRRRENXH:shared_process":[],"2DQM76578:shared_process":[],"2DNNU5TPF:shared_process":[],"2DQZY6DF6:shared_process":[],"2DNW3BF5J:shared_process":[],"2DNJH6GUQ:shared_process":[],"2DQGBK89U:shared_process":[],"2DNG9RKTW:shared_process":[],"2DRENZE7M:shared_process":[],"2DRPH3SK6:shared_process":[],"2DNCJGS7R:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}